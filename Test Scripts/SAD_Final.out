memory[0] = 32'b00110100000000100000000000000000;	//	vbsme:		ori	$v0, $zero, 0
memory[1] = 32'b00110100000000110000000000000000;	//			ori	$v1, $zero, 0
memory[2] = 32'b00111100000101110111111111111111;	//			lei	$s7, 0x7fff
memory[3] = 32'b00110110111101111111111111111111;	//			ori	$s7, $s7, 0xffff
memory[4] = 32'b10001100100100000000000000000000;	//			lw	$s0, 0($a0)
memory[5] = 32'b10001100100100010000000000000100;	//			lw	$s1, 4($a0)
memory[6] = 32'b10001100100100100000000000001000;	//			lw	$s2, 8($a0)
memory[7] = 32'b10001100100100110000000000001100;	//			lw	$s3, 12($a0)
memory[8] = 32'b00000000000100111010100010000000;	//			sll	$s5, $s3, 2
memory[9] = 32'b01110010101100101010000000000010;	//			mul	$s4, $s5, $s2
memory[10] = 32'b00100010100101001111111111111100;	//			addi	$s4, $s4, -4
memory[11] = 32'b00000010100001101010000000100000;	//			add	$s4, $s4, $a2
memory[12] = 32'b00000000000100010111100010000000;	//			sll	$t7, $s1, 2
memory[13] = 32'b00000000000100110100100010000000;	//			sll	$t1, $s3, 2
memory[14] = 32'b00000001111010010111100000100010;	//			sub	$t7, $t7, $t1
memory[15] = 32'b00100001111011110000000000000100;	//			addi	$t7, $t7, 4
memory[16] = 32'b00100000101011100000000000000000;	//			addi	$t6, $a1, 0
memory[17] = 32'b00000000110101011100100000100000;	//			add	$t9, $a2, $s5
memory[18] = 32'b00100011001110011111111111111100;	//			addi	$t9, $t9, -4
memory[19] = 32'b00000000000000001011000000100000;	//			add	$s6, $0, $0
memory[20] = 32'b00000000110101011100100000100000;	//	SAD_Routine:	add	$t9, $a2, $s5
memory[21] = 32'b00100011001110011111111111111100;	//			addi	$t9, $t9, -4
memory[22] = 32'b00100000000011010000000000000000;	//			addi	$t5, $0, 0
memory[23] = 32'b00000001110000000101100000100000;	//			add	$t3, $t6, $0
memory[24] = 32'b00000000110000000110000000100000;	//			add	$t4, $a2, $0
memory[25] = 32'b10001101011010010000000000000000;	//	WindowLoop:	lw	$t1, 0($t3)
memory[26] = 32'b10001101100010100000000000000000;	//			lw	$t2, 0($t4)
memory[27] = 32'b00000001001010100100100000100010;	//			sub	$t1, $t1, $t2
memory[28] = 32'b00000001001000000101000000101010;	//			slt	$t2, $t1, $0
memory[29] = 32'b00010001010000000000000000000010;	//			beq	$t2, $0, gtzero
memory[30] = 32'b00000001001000000100100000100111;	//			nor	$t1, $t1, $0
memory[31] = 32'b00100001001010010000000000000001;	//			addi	$t1, $t1, 1
memory[32] = 32'b00000001101010010110100000100000;	//	gtzero:		add	$t5, $t5, $t1
memory[33] = 32'b00010001100101000000000000001000;	//			beq	$t4, $s4, returnUpdate
memory[34] = 32'b00010001100110010000000000000011;	//			beq	$t4, $t9, NextRow
memory[35] = 32'b00100001100011000000000000000100;	//			addi	$t4, $t4, 4
memory[36] = 32'b00100001011010110000000000000100;	//			addi	$t3, $t3, 4
memory[37] = 32'b00001000000000000000000000011001;	//			j	WindowLoop
memory[38] = 32'b00000011001101011100100000100000;	//	NextRow:	add	$t9, $t9, $s5
memory[39] = 32'b00100001100011000000000000000100;	//			addi	$t4, $t4, 4
memory[40] = 32'b00000001011011110101100000100000;	//			add	$t3, $t3, $t7
memory[41] = 32'b00001000000000000000000000011001;	//			j	WindowLoop
memory[42] = 32'b00100000000010000000000000000000;	//	returnUpdate:	addi	$t0, $0, 0
memory[43] = 32'b00000001110001010100100000100010;	//			sub	$t1, $t6, $a1
memory[44] = 32'b00000000000010010100100010000010;	//			srl	$t1, $t1, 2
memory[45] = 32'b00000001001100011100000000101010;	//	IndexLoop:	slt	$t8, $t1, $s1
memory[46] = 32'b00010111000000000000000000000011;	//			bne	$t8, $0, CheckSAD
memory[47] = 32'b00000001001100010100100000100010;	//			sub	$t1, $t1, $s1
memory[48] = 32'b00100001000010000000000000000001;	//			addi	$t0, $t0, 1
memory[49] = 32'b00001000000000000000000000101101;	//			j	IndexLoop
memory[50] = 32'b00000010111011011100000000101010;	//	CheckSAD:	slt	$t8, $s7, $t5
memory[51] = 32'b00010111000000000000000000000011;	//			bne	$t8, $0, CheckExit
memory[52] = 32'b00100001101101110000000000000000;	//			addi	$s7, $t5, 0
memory[53] = 32'b00100001000000100000000000000000;	//			addi	$v0, $t0, 0
memory[54] = 32'b00100001001000110000000000000000;	//			addi	$v1, $t1, 0
memory[55] = 32'b00000010001100110101000000100010;	//	CheckExit:	sub	$t2, $s1, $s3
memory[56] = 32'b00000010000100100101100000100010;	//			sub	$t3, $s0, $s2
memory[57] = 32'b00010101000010110000000000000010;	//			bne	$t0, $t3, NextWindow
memory[58] = 32'b00010101001010100000000000000001;	//			bne	$t1, $t2, NextWindow
memory[59] = 32'b00001000000000000000000001100100;	//			j	End
memory[60] = 32'b00010110110000000000000000000010;	//	NextWindow:	bne	$s6, $0, lastDown
memory[61] = 32'b00010010110000000000000000011001;	//			beq	$s6, $0, MoveRight
memory[62] = 32'b00001000000000000000000001100100;	//			j	End
memory[63] = 32'b00110010110110000000000000000001;	//	lastDown:	andi	$t8, $s6, 1
memory[64] = 32'b00010011000000000000000000000011;	//			beq	$t8, $0, lastRight
memory[65] = 32'b00010001001000000000000000011000;	//			beq	$t1, $0, MoveUR
memory[66] = 32'b00010001001010100000000000011100;	//			beq	$t1, $t2, MoveDL
memory[67] = 32'b00001000000000000000000001010011;	//			j	MoveDown
memory[68] = 32'b00110010110110000000000000000010;	//	lastRight:	andi	$t8, $s6, 2
memory[69] = 32'b00010011000000000000000000000011;	//			beq	$t8, $0, lastUR
memory[70] = 32'b00010001000000000000000000011000;	//			beq	$t0, $0, MoveDL
memory[71] = 32'b00010001000010110000000000010010;	//			beq	$t0, $t3, MoveUR
memory[72] = 32'b00001000000000000000000001010111;	//			j	MoveRight
memory[73] = 32'b00110010110110000000000000000100;	//	lastUR:		andi	$t8, $s6, 4
memory[74] = 32'b00010011000000000000000000000011;	//			beq	$t8, $0, lastDL
memory[75] = 32'b00010001001010100000000000000111;	//			beq	$t1, $t2, MoveDown
memory[76] = 32'b00010001000000000000000000001010;	//			beq	$t0, $0, MoveRight
memory[77] = 32'b00001000000000000000000001011010;	//			j	MoveUR
memory[78] = 32'b00110010110110000000000000001000;	//	lastDL:		andi	$t8, $s6, 8
memory[79] = 32'b00010011000000000000000000010100;	//			beq	$t8, $0, End
memory[80] = 32'b00010001000010110000000000000110;	//			beq	$t0, $t3, MoveRight
memory[81] = 32'b00010001001000000000000000000001;	//			beq	$t1, $0, MoveDown
memory[82] = 32'b00001000000000000000000001011111;	//			j	MoveDL
memory[83] = 32'b00000000000100010100000010000000;	//	MoveDown:	sll	$t0, $s1, 2
memory[84] = 32'b00000001110010000111000000100000;	//			add	$t6, $t6, $t0
memory[85] = 32'b00110100000101100000000000000001;	//			ori	$s6, $zero, 1
memory[86] = 32'b00001000000000000000000000010100;	//			j	SAD_Routine
memory[87] = 32'b00100001110011100000000000000100;	//	MoveRight:	addi	$t6, $t6, 4
memory[88] = 32'b00110100000101100000000000000010;	//			ori	$s6, $zero, 2
memory[89] = 32'b00001000000000000000000000010100;	//			j	SAD_Routine
memory[90] = 32'b00000000000100010100000010000000;	//	MoveUR:		sll	$t0, $s1, 2
memory[91] = 32'b00000001110010000111000000100010;	//			sub	$t6, $t6, $t0
memory[92] = 32'b00100001110011100000000000000100;	//			addi	$t6, $t6, 4
memory[93] = 32'b00110100000101100000000000000100;	//			ori	$s6, $zero, 4
memory[94] = 32'b00001000000000000000000000010100;	//			j	SAD_Routine
memory[95] = 32'b00000000000100010100000010000000;	//	MoveDL:		sll	$t0, $s1, 2
memory[96] = 32'b00000001110010000111000000100000;	//			add	$t6, $t6, $t0
memory[97] = 32'b00100001110011101111111111111100;	//			addi	$t6, $t6, -4
memory[98] = 32'b00110100000101100000000000001000;	//			ori	$s6, $zero, 8
memory[99] = 32'b00001000000000000000000000010100;	//			j	SAD_Routine
memory[100] = 32'b00000011111000000000000000001000;	//	End:		jr	$ra
